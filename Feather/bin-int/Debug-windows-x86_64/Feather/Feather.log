  EntityHandle.cpp
  World.cpp
c:\dev\featherrepo\feather\src\feather\world.cpp(72): warning C4267: 'initializing': conversion from 'size_t' to 'int', possible loss of data
  main.cpp
c:\dev\featherrepo\feather\src\feather\componentregistry.h(77): warning C4267: 'argument': conversion from 'size_t' to 'const int', possible loss of data
  c:\dev\featherrepo\feather\src\main.cpp(56): note: see reference to function template instantiation 'void ComponentRegistry::AllocateComponentSet<Position>(int)' being compiled
c:\dev\featherrepo\feather\src\feather\componentsparseset.h(71): warning C4267: '=': conversion from 'size_t' to 'int', possible loss of data
  c:\dev\featherrepo\feather\src\feather\componentsparseset.h(55): note: while compiling class template member function 'void ComponentSparseSet<Gravity>::RemoveComponentData(Entity)'
  c:\dev\featherrepo\feather\src\feather\componentsparseset.h(137): note: see reference to function template instantiation 'void ComponentSparseSet<Gravity>::RemoveComponentData(Entity)' being compiled
  c:\dev\featherrepo\feather\src\feather\componentregistry.h(81): note: see reference to class template instantiation 'ComponentSparseSet<Gravity>' being compiled
  c:\dev\featherrepo\feather\src\main.cpp(59): note: see reference to function template instantiation 'void ComponentRegistry::AllocateComponentSet<Gravity>(int)' being compiled
c:\dev\featherrepo\feather\src\feather\componentregistry.h(91): warning C4267: 'argument': conversion from 'size_t' to 'const int', possible loss of data
  c:\dev\featherrepo\feather\src\feather\world.h(113): note: see reference to function template instantiation 'ComponentSparseSet<Position> *ComponentRegistry::GetComponentSet<T>(void)' being compiled
          with
          [
              T=Position
          ]
  c:\dev\featherrepo\feather\src\feather\world.h(245): note: see reference to function template instantiation 'ComponentSparseSet<Position> *World::GetComponentSet<Position>(void)' being compiled
  c:\dev\featherrepo\feather\src\main.cpp(27): note: see reference to function template instantiation 'void World::ForEach<Position,Gravity>(std::function<void (Entity,Position &,Gravity &)>)' being compiled
c:\dev\featherrepo\feather\src\feather\componentsparseset.h(45): warning C4267: '=': conversion from 'size_t' to 'int', possible loss of data
  c:\dev\featherrepo\feather\src\feather\componentsparseset.h(34): note: while compiling class template member function 'ComponentType *ComponentSparseSet<ComponentType>::AddComponentData(Entity,ComponentType)'
          with
          [
              ComponentType=Gravity
          ]
  c:\dev\featherrepo\feather\src\feather\componentregistry.h(97): note: see reference to function template instantiation 'ComponentType *ComponentSparseSet<ComponentType>::AddComponentData(Entity,ComponentType)' being compiled
          with
          [
              ComponentType=Gravity
          ]
c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\utility(239): warning C4244: 'initializing': conversion from '_Ty' to '_Ty1', possible loss of data
          with
          [
              _Ty=unsigned __int64
          ]
          and
          [
              _Ty1=int
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0(879): note: see reference to function template instantiation 'std::pair<const _Kty,_Ty>::pair<unsigned __int64,ComponentSparseSet<Position>*,0>(std::pair<unsigned __int64,ComponentSparseSet<Position> *> &&) noexcept' being compiled
          with
          [
              _Kty=int,
              _Ty=IComponentSet *
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0(881): note: see reference to function template instantiation 'std::pair<const _Kty,_Ty>::pair<unsigned __int64,ComponentSparseSet<Position>*,0>(std::pair<unsigned __int64,ComponentSparseSet<Position> *> &&) noexcept' being compiled
          with
          [
              _Kty=int,
              _Ty=IComponentSet *
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\list(711): note: see reference to function template instantiation 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,std::pair<unsigned __int64,ComponentSparseSet<Position> *>>(_Alloc &,_Objty *const ,std::pair<unsigned __int64,ComponentSparseSet<Position> *> &&)' being compiled
          with
          [
              _Alloc=std::allocator<std::_List_node<std::pair<const int,IComponentSet *>,std::_Default_allocator_traits<std::allocator<std::pair<const int,IComponentSet *>>>::void_pointer>>,
              _Ty=std::pair<const int,IComponentSet *>,
              _Objty=std::pair<const int,IComponentSet *>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\list(716): note: see reference to function template instantiation 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,std::pair<unsigned __int64,ComponentSparseSet<Position> *>>(_Alloc &,_Objty *const ,std::pair<unsigned __int64,ComponentSparseSet<Position> *> &&)' being compiled
          with
          [
              _Alloc=std::allocator<std::_List_node<std::pair<const int,IComponentSet *>,std::_Default_allocator_traits<std::allocator<std::pair<const int,IComponentSet *>>>::void_pointer>>,
              _Ty=std::pair<const int,IComponentSet *>,
              _Objty=std::pair<const int,IComponentSet *>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\list(947): note: see reference to function template instantiation 'std::_List_node<std::pair<const _Kty,_Ty>,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_List_buy<std::pair<const _Kty,_Ty>,_Alloc>::_Buynode<std::pair<unsigned __int64,ComponentSparseSet<Position> *>>(std::_List_node<std::pair<const _Kty,_Ty>,std::_Default_allocator_traits<_Alloc>::void_pointer> *,std::_List_node<std::pair<const _Kty,_Ty>,std::_Default_allocator_traits<_Alloc>::void_pointer> *,std::pair<unsigned __int64,ComponentSparseSet<Position> *> &&)' being compiled
          with
          [
              _Kty=int,
              _Ty=IComponentSet *,
              _Alloc=std::allocator<std::pair<const int,IComponentSet *>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\list(950): note: see reference to function template instantiation 'std::_List_node<std::pair<const _Kty,_Ty>,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_List_buy<std::pair<const _Kty,_Ty>,_Alloc>::_Buynode<std::pair<unsigned __int64,ComponentSparseSet<Position> *>>(std::_List_node<std::pair<const _Kty,_Ty>,std::_Default_allocator_traits<_Alloc>::void_pointer> *,std::_List_node<std::pair<const _Kty,_Ty>,std::_Default_allocator_traits<_Alloc>::void_pointer> *,std::pair<unsigned __int64,ComponentSparseSet<Position> *> &&)' being compiled
          with
          [
              _Kty=int,
              _Ty=IComponentSet *,
              _Alloc=std::allocator<std::pair<const int,IComponentSet *>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\list(916): note: see reference to function template instantiation 'void std::list<std::pair<const _Kty,_Ty>,std::allocator<std::pair<const _Kty,_Ty>>>::_Insert<std::pair<unsigned __int64,ComponentSparseSet<Position> *>>(std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<const _Kty,_Ty>>>,std::_Iterator_base0>,std::pair<unsigned __int64,ComponentSparseSet<Position> *> &&)' being compiled
          with
          [
              _Kty=int,
              _Ty=IComponentSet *
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\list(917): note: see reference to function template instantiation 'void std::list<std::pair<const _Kty,_Ty>,std::allocator<std::pair<const _Kty,_Ty>>>::_Insert<std::pair<unsigned __int64,ComponentSparseSet<Position> *>>(std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<const _Kty,_Ty>>>,std::_Iterator_base0>,std::pair<unsigned __int64,ComponentSparseSet<Position> *> &&)' being compiled
          with
          [
              _Kty=int,
              _Ty=IComponentSet *
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xhash(306): note: see reference to function template instantiation 'std::pair<const _Kty,_Ty> &std::list<std::pair<const _Kty,_Ty>,std::allocator<std::pair<const _Kty,_Ty>>>::emplace_front<std::pair<unsigned __int64,ComponentSparseSet<Position> *>>(std::pair<unsigned __int64,ComponentSparseSet<Position> *> &&)' being compiled
          with
          [
              _Kty=int,
              _Ty=IComponentSet *
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\unordered_map(311): note: see reference to function template instantiation 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>> std::_Hash<std::_Umap_traits<_Kty,IComponentSet*,std::_Uhash_compare<_Kty,_Hasher,_Keyeq>,_Alloc,false>>::emplace_hint<std::pair<unsigned __int64,ComponentSparseSet<Position> *>>(std::_List_const_iterator<std::_List_val<std::_List_simple_types<_Ty>>>,std::pair<unsigned __int64,ComponentSparseSet<Position> *> &&)' being compiled
          with
          [
              _Ty=std::pair<const int,IComponentSet *>,
              _Kty=int,
              _Hasher=std::hash<int>,
              _Keyeq=std::equal_to<int>,
              _Alloc=std::allocator<std::pair<const int,IComponentSet *>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\unordered_map(311): note: see reference to function template instantiation 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>> std::_Hash<std::_Umap_traits<_Kty,IComponentSet*,std::_Uhash_compare<_Kty,_Hasher,_Keyeq>,_Alloc,false>>::emplace_hint<std::pair<unsigned __int64,ComponentSparseSet<Position> *>>(std::_List_const_iterator<std::_List_val<std::_List_simple_types<_Ty>>>,std::pair<unsigned __int64,ComponentSparseSet<Position> *> &&)' being compiled
          with
          [
              _Ty=std::pair<const int,IComponentSet *>,
              _Kty=int,
              _Hasher=std::hash<int>,
              _Keyeq=std::equal_to<int>,
              _Alloc=std::allocator<std::pair<const int,IComponentSet *>>
          ]
  c:\dev\featherrepo\feather\src\feather\componentregistry.h(82): note: see reference to function template instantiation 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>> std::unordered_map<int,IComponentSet *,std::hash<int>,std::equal_to<_Kty>,std::allocator<_Ty>>::insert<std::pair<unsigned __int64,ComponentSparseSet<Position> *>,void>(std::_List_const_iterator<std::_List_val<std::_List_simple_types<_Ty>>>,_Valty &&)' being compiled
          with
          [
              _Ty=std::pair<const int,IComponentSet *>,
              _Kty=int,
              _Valty=std::pair<unsigned __int64,ComponentSparseSet<Position> *>
          ]
  c:\dev\featherrepo\feather\src\feather\componentregistry.h(82): note: see reference to function template instantiation 'std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>> std::unordered_map<int,IComponentSet *,std::hash<int>,std::equal_to<_Kty>,std::allocator<_Ty>>::insert<std::pair<unsigned __int64,ComponentSparseSet<Position> *>,void>(std::_List_const_iterator<std::_List_val<std::_List_simple_types<_Ty>>>,_Valty &&)' being compiled
          with
          [
              _Ty=std::pair<const int,IComponentSet *>,
              _Kty=int,
              _Valty=std::pair<unsigned __int64,ComponentSparseSet<Position> *>
          ]
  Generating Code...
  Feather.vcxproj -> C:\Dev\FeatherRepo\Feather\..\bin\Debug-windows-x86_64\Feather\Feather.exe
